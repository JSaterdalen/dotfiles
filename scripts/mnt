#!/usr/bin/env bash

set -eo pipefail

mountRemote() {
    if [[ -z "$SHARE" ]]; then 
        getShare 
    fi

    if [[ -z "$OP_SESSION_saterdalen" ]]; then 
        getOPSession
    fi
    
    read -s -p "pass: " PASS
    echo
    SYNO=$(op get item mqrsargv65gofgcia2fw35gphy --fields password)
    echo

    echo "Connecting to Rey..."
    ssh -T josh@192.168.1.5 << EOF
    echo $SYNO | sudo -Sv &> /dev/null
    echo "Connected."
    if sudo synoshare --is_accessible $SHARE | grep -q 'is 0'; then 
        echo "Not mounted. Mounting..."

        if sudo synoshare --enc_mount $SHARE $PASS &>/dev/null; then
            echo "Successfully mounted $SHARE."
            exit 0
        else
            echo "Key not matched. $SHARE not mounted."
            exit 1
        fi
    else
        echo "$SHARE is already mounted."
        exit 0
    fi
EOF
    STATUS="mounted"
}

mountLocal() {
    if [[ -z "$SHARE" ]]; then 
        getShare
    fi

    if [[ -z "$OP_SESSION_saterdalen" ]]; then 
        getOPSession
    fi

    # TODO add Mac configuration
    # mkdir /Volumes
    # mkdir /Volumes/Projects
    # mount_smbfs //User:Pass@SERVERNAME/Projects /Volumes/Projects
    
    echo "Mounting $SHARE locally..."
    mkdir -p $HOME/mnt/$SHARE
    LOCAL=$(op get item szebn3jowfktte6pi5cboaco5y --fields password)
    echo $LOCAL | sudo -S mount -t cifs -o rw,uid=josh,gid=josh,credentials=$HOME/.sharelogin //192.168.1.5/$SHARE $HOME/mnt/$SHARE 2> /dev/null
    
    if [[ $? -eq 1 ]]; then
        echo "Not mounted. Use '-m' to mount."
        rm -rf $HOME/mnt/$SHARE
        exit 1
    fi

    echo "Mounted $SHARE."
    nautilus $HOME/mnt/$SHARE & disown && exit
}

unmountShare() {
    if [[ -z "$SHARE" ]]; then 
        getShare
    fi

    if [[ -z "$OP_SESSION_saterdalen" ]]; then 
        getOPSession
    fi

    if [[ -d "$HOME/mnt/$SHARE" ]]; then 
        echo "Unmounting locally..."
        LOCAL=$(op get item szebn3jowfktte6pi5cboaco5y --fields password)
        echo $LOCAL | sudo -S umount $HOME/mnt/$SHARE &> /dev/null
        rm -rf $HOME/mnt/$SHARE
        echo "Unmounted $SHARE locally."
    fi

    SYNO=$(op get item mqrsargv65gofgcia2fw35gphy --fields password)
    echo "Connecting to Rey..."
    ssh -T josh@192.168.1.5 << EOF
    echo "Connected."
    echo $SYNO | sudo -Sv &> /dev/null
    if sudo synoshare --is_accessible $SHARE | grep -q 'is 0'; then 
        echo "$SHARE is not mounted."
    else
        echo "Unmounting $SHARE on Rey..."
        sudo synoshare --enc_unmount $SHARE
        echo "Unmounted $SHARE."
    fi
EOF

}

getShare() {
    read -p "share: " SHARE
}

getOPSession() {
    eval $(op signin saterdalen)
    if [[ -z "$OP_SESSION_saterdalen" ]]; then 
        return 1
    fi
}

# Get the options
while getopts ":ulm" option; do
    case $option in
        u) # unmount remote and local
            unmountShare
            ;;
        m) # mount remote
            mountRemote
            ;;
        l) # mount local
            mountLocal
            ;;
       \?) # Invalid option
            echo "Error: Invalid option"
            exit;;
    esac
done