#! /usr/bin/env python3

"""Format a given SFDX package.xml file for importing into a Copado Work Item.

Requirements

- beautifulsoup4
- pyperclip
- 'lxml' module may be needed if given XML parsing errors.
"""

import os.path
import argparse
from bs4 import BeautifulSoup
import pyperclip

parser = argparse.ArgumentParser(prog='pypado')
group = parser.add_mutually_exclusive_group()
group.add_argument('-x', metavar='file', default='package.xml',
                   help='path to package.xml file')
group.add_argument('-c', action='store_true',
                   help='use data from clipboard')
args = parser.parse_args()

PACKAGE_XML = args.x
USE_CLIPBOARD = args.c

if USE_CLIPBOARD:
    file = pyperclip.paste()
    if not "<types>" in file:
        print("\nClipboard does not contain valid xml.\n")
        exit()
else:
    if not os.path.exists(PACKAGE_XML):
        print("\nNo package.xml found.\n\n"
              "Run `pypado -h` for help.\n")
        exit()
    with open(os.path.expanduser(PACKAGE_XML), 'r') as f:
        file = f.read()

soup = BeautifulSoup(file, 'xml')

# make a list of all <types> tags
types = soup.find_all('types')
component_list = []

# for each type, get each member and format it with the type's name
for t in types:
    type_name = t.find('name')
    members = t.find_all('members')
    for member in members:
        component_list.append(f"{type_name.string}/{member.string}")

# format list with line breaks
COMP_LIST_FORMATTED = "\n".join(component_list)
pyperclip.copy(COMP_LIST_FORMATTED)

print('\n' + COMP_LIST_FORMATTED + '\n')
print("List has been copied to your clipboard.\n")
