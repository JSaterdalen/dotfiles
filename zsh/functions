mkcd() {
  mkdir "$1"
  cd "$1"
}

# ::: Linux :::

## fix Divinity Original Sin II on Linux
fixdos() {
  cd "/home/josh/games/SteamLibrary/steamapps/common/Divinity Original Sin 2/"
  mv ./bin ./bin.bak 
  ln -s DefEd/bin bin
  cd bin
  mv ./SupportTool.exe ./SupportTool.bak
  ln -s EoCApp.exe SupportTool.exe
  cd
}

# ::: SFDX :::

# open org
sfo() {
  if [[ -z "$1" ]]; then 
    sfdx alias:list
  else
    sfdx force:org:open -u $1; 
  fi
}
# open org in VSCode
sfc() {
  cd $HOME/sfdx/$1
  code . 
  clear
}
# display org api limits
sflim() {
  if [[ -z "$1" ]]; then 
    sfdx alias:list
  else
    sfdx force:org:open -u $1; 
  fi
}
# set default org in current project
sfdef() {
  sfdx config:set defaultusername=${1}
}

dxup() {
  if [[ $(npm list -g | grep sfdx-cli) ]] ; then
    npm install @salesforce/cli --global
  else
    sfdx update
  fi
}

# installs packages into one org based on another
# usage 'package [source org alias] [target org alias]'
dxcopypkg() {
  for OUTPUT in $(sfdx force:package:installed:list -u $1 --json | jq '.result [] .SubscriberPackageVersionId' -r)
  do
    sfdx force:package:install -u $2 -w 500 -p $OUTPUT -a package -r
  done
}
